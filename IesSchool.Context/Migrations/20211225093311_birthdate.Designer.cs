// <auto-generated />
using System;
using IesSchool.Context.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IesSchool.Context.Migrations
{
    [DbContext(typeof(iesContext))]
    [Migration("20211225093311_birthdate")]
    partial class birthdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IesSchool.Context.Models.AcadmicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcadmicYears");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Deatils")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Evaluation")
                        .HasColumnType("int");

                    b.Property<int?>("ObjectiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ApplicationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationGroup", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.ApplicationGroupRole", b =>
                {
                    b.Property<int>("ApplicationGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.HasKey("ApplicationGroupId", "ApplicationRoleId");

                    b.HasIndex("ApplicationRoleId");

                    b.ToTable("ApplicationGroupRole", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.ApplicationUserGroup", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.HasKey("ApplicationUserId", "ApplicationGroupId");

                    b.HasIndex("ApplicationGroupId");

                    b.ToTable("ApplicationUserGroup", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_Ar");

                    b.HasKey("Id");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Assistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("ImageBinary")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Assistant", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.AttachmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("AttachmentType", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("ImageBinary")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventAttachement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAttachement", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventAttachmentBinary", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileBinary")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("EventAttachmentBinary", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("StudentId");

                    b.ToTable("Event_Student", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventStudentId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("EventStudentId");

                    b.ToTable("EventStudentFiles");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudentFileBinary", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileBinary")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("EventStudentFileBinary", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Event_Teacher", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("EventType", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.ExtraCurricular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_Ar");

                    b.HasKey("Id");

                    b.ToTable("ExtraCurricular", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("Iepid")
                        .HasColumnType("int")
                        .HasColumnName("IEPId");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LongTermGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortTermGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShortTermProgressNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int?>("StrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("Iepid");

                    b.HasIndex("SkillId");

                    b.HasIndex("StrandId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Iep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AcadmicYearId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfPreparation")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FooterNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeadOfDepartment")
                        .HasColumnType("int");

                    b.Property<int>("HeadOfEducation")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastDateOfReview")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Others")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParentsInvolvedInSettingUpSuggestions")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParentsMeeting")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProgressReport")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReportCard")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("StudentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcadmicYearId");

                    b.HasIndex("HeadOfDepartment");

                    b.HasIndex("HeadOfEducation");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TermId");

                    b.ToTable("IEP", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.IepAssistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AssistantId")
                        .HasColumnType("int");

                    b.Property<int?>("Iepid")
                        .HasColumnType("int")
                        .HasColumnName("IEPId");

                    b.HasKey("Id");

                    b.HasIndex("AssistantId");

                    b.HasIndex("Iepid");

                    b.ToTable("IepAssistant", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.IepExtraCurricular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ExtraCurricularId")
                        .HasColumnType("int");

                    b.Property<int?>("Iepid")
                        .HasColumnType("int")
                        .HasColumnName("IEPId");

                    b.HasKey("Id");

                    b.HasIndex("ExtraCurricularId");

                    b.HasIndex("Iepid");

                    b.ToTable("IEP_ExtraCurricular", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.IepParamedicalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Iepid")
                        .HasColumnType("int")
                        .HasColumnName("IEPId");

                    b.Property<int?>("ParamedicalServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Iepid");

                    b.HasIndex("ParamedicalServiceId");

                    b.ToTable("IEP_ParamedicalService", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Entry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<int?>("IepId")
                        .HasColumnType("int");

                    b.Property<string>("Indication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionPractice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMasterd")
                        .HasColumnType("bit");

                    b.Property<string>("ObjectiveNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectiveNumber")
                        .HasColumnType("int");

                    b.Property<string>("ResourcesRequired")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GoalId");

                    b.ToTable("Objective", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.ObjectiveEvaluationProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillEvaluationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.HasIndex("SkillEvaluationId");

                    b.ToTable("Objective_EvaluationProcess", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.ObjectiveSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.HasIndex("SkillId");

                    b.ToTable("Objective_Skill", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.ParamedicalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_Ar");

                    b.HasKey("Id");

                    b.ToTable("ParamedicalService", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Owner")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Phone");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Phone", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Religion", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CurrentTermId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentYearId")
                        .HasColumnType("int");

                    b.Property<int?>("LongTermPercent")
                        .HasColumnType("int");

                    b.Property<int?>("ShortTermPercent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTermId");

                    b.HasIndex("CurrentYearId");

                    b.ToTable("Setting", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_Ar");

                    b.Property<int?>("StrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrandId");

                    b.ToTable("Skill", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.SkillAlowedDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SkillId");

                    b.ToTable("Skill_AlowedDepartment", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.SkillEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_Ar");

                    b.HasKey("Id");

                    b.ToTable("SkillEvaluation", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("State", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Strand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_Ar");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Strand", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BirthCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Block")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Boulevard")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Certificate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CertificateIssueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CertificateIssueLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CivilId")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DisabilityNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmergencyPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FatherNationalityId")
                        .HasColumnType("int");

                    b.Property<string>("FatherPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FatherStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FatherWorkCategory")
                        .HasColumnType("int");

                    b.Property<string>("FatherWorkLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("ImageBinary")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Level")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MinistryNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MotherNationalityId")
                        .HasColumnType("int");

                    b.Property<string>("MotherPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MotherStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MotherWorkCategory")
                        .HasColumnType("int");

                    b.Property<string>("MotherWorkLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("PassportNumber")
                        .HasColumnType("int");

                    b.Property<string>("PaymentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StudentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuspensionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("TermType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirthCountryId");

                    b.HasIndex("CityId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FatherNationalityId");

                    b.HasIndex("MotherNationalityId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("StateId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AttachmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssuedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidTill")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAttachment", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentAttachmentBinary", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<byte[]>("FileBinary")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentAttachmentBinary", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentHistoricalSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("HistoricalSkilld")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoricalSkilld");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentHistoricalSkills");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentTherapist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TherapistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TherapistId");

                    b.ToTable("Student_Therapist", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AcadmicYearId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AcadmicYearId");

                    b.ToTable("Term", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.TherapistParamedicalService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ParamedicalServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParamedicalServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("TherapistParamedicalService", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("ImageBinary")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExtraCurricular")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeadofEducation")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOther")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTeacher")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTherapist")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("ParentPassword")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NationalityId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAssistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AssistantId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssistantId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Assistant", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AttachmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssuedIn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidTill")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAttachment", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAttachmentBinary", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileBinary")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAttachmentBinary", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.VwAssistant", b =>
                {
                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("NationalityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToView("Vw_Assistants");
                });

            modelBuilder.Entity("IesSchool.Context.Models.VwIep", b =>
                {
                    b.Property<int>("AcadmicYearId")
                        .HasColumnType("int");

                    b.Property<string>("AcadmicYearName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfPreparation")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FooterNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeadOfDepartment")
                        .HasColumnType("int");

                    b.Property<int>("HeadOfEducation")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastDateOfReview")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Others")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParentsInvolvedInSettingUpSuggestions")
                        .HasColumnType("bit");

                    b.Property<bool?>("ParentsMeeting")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProgressReport")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReportCard")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StudentNameAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StudentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToView("Vw_Ieps");
                });

            modelBuilder.Entity("IesSchool.Context.Models.VwStudent", b =>
                {
                    b.Property<int?>("BirthCountryId")
                        .HasColumnType("int");

                    b.Property<string>("Block")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Boulevard")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Certificate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CertificateIssueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CertificateIssueLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CivilId")
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DisabilityNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmergencyPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FatherNationalityId")
                        .HasColumnType("int");

                    b.Property<string>("FatherPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FatherStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FatherWorkCategory")
                        .HasColumnType("int");

                    b.Property<string>("FatherWorkLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Level")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MinistryNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MotherNationalityId")
                        .HasColumnType("int");

                    b.Property<string>("MotherPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MotherStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MotherWorkCategory")
                        .HasColumnType("int");

                    b.Property<string>("MotherWorkLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("NationalityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("PassportNumber")
                        .HasColumnType("int");

                    b.Property<string>("PaymentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StudentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuspensionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("TermType")
                        .HasColumnType("int");

                    b.ToView("Vw_Students");
                });

            modelBuilder.Entity("IesSchool.Context.Models.VwUser", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExtraCurricular")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeadofEducation")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOther")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTeacher")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTherapist")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("NationalityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ParentPassword")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ParentUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.ToView("Vw_Users");
                });

            modelBuilder.Entity("IesSchool.Context.Models.WorkCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("WorkCategory", (string)null);
                });

            modelBuilder.Entity("IesSchool.Context.Models.Activity", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Objective", "Objective")
                        .WithMany("Activities")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Activities_Objective");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ApplicationGroupRole", b =>
                {
                    b.HasOne("IesSchool.Context.Models.ApplicationGroup", "ApplicationGroup")
                        .WithMany("ApplicationGroupRoles")
                        .HasForeignKey("ApplicationGroupId")
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationGroupRole_ApplicationGroup");

                    b.HasOne("IesSchool.Context.Models.AspNetRole", "ApplicationRole")
                        .WithMany("ApplicationGroupRoles")
                        .HasForeignKey("ApplicationRoleId")
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationGroupRole_AspNetRoles");

                    b.Navigation("ApplicationGroup");

                    b.Navigation("ApplicationRole");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ApplicationUserGroup", b =>
                {
                    b.HasOne("IesSchool.Context.Models.ApplicationGroup", "ApplicationGroup")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("ApplicationGroupId")
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationUserGroup_ApplicationGroup");

                    b.HasOne("IesSchool.Context.Models.AspNetUser", "ApplicationUser")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationUserGroup_AspNetUsers");

                    b.Navigation("ApplicationGroup");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUser", b =>
                {
                    b.HasOne("IesSchool.Context.Models.User", "IdNavigation")
                        .WithOne("AspNetUser")
                        .HasForeignKey("IesSchool.Context.Models.AspNetUser", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_AspNetUsers_User");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserRole", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AspNetRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IesSchool.Context.Models.AspNetUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUserToken", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AspNetUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Assistant", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Department", "Department")
                        .WithMany("Assistants")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Assistant_Department");

                    b.HasOne("IesSchool.Context.Models.Country", "Nationality")
                        .WithMany("Assistants")
                        .HasForeignKey("NationalityId")
                        .HasConstraintName("FK_Assistant_Country");

                    b.Navigation("Department");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("IesSchool.Context.Models.City", b =>
                {
                    b.HasOne("IesSchool.Context.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_City_State");

                    b.Navigation("State");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Event", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Department", "Department")
                        .WithMany("Events")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Event_Department");

                    b.HasOne("IesSchool.Context.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .HasConstraintName("FK_Event_EventType");

                    b.Navigation("Department");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventAttachement", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Event", "Event")
                        .WithMany("EventAttachements")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_EventAttachement_Event");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventAttachmentBinary", b =>
                {
                    b.HasOne("IesSchool.Context.Models.EventAttachement", "IdNavigation")
                        .WithOne("EventAttachmentBinary")
                        .HasForeignKey("IesSchool.Context.Models.EventAttachmentBinary", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EventAttachmentBinary_EventAttachement");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudent", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Event", "Event")
                        .WithMany("EventStudents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Event_Student_Event");

                    b.HasOne("IesSchool.Context.Models.Student", "Student")
                        .WithMany("EventStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Event_Student_Students");

                    b.Navigation("Event");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudentFile", b =>
                {
                    b.HasOne("IesSchool.Context.Models.EventStudent", "EventStudent")
                        .WithMany("EventStudentFiles")
                        .HasForeignKey("EventStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_EventStudentFiles_Event_Student1");

                    b.Navigation("EventStudent");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudentFileBinary", b =>
                {
                    b.HasOne("IesSchool.Context.Models.EventStudentFile", "IdNavigation")
                        .WithOne("EventStudentFileBinary")
                        .HasForeignKey("IesSchool.Context.Models.EventStudentFileBinary", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_EventStudentFileBinary_EventStudentFiles");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventTeacher", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Event", "Event")
                        .WithMany("EventTeachers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Event_Teacher_Event");

                    b.HasOne("IesSchool.Context.Models.User", "Teacher")
                        .WithMany("EventTeachers")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Event_Teacher_User");

                    b.Navigation("Event");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Goal", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Area", "Area")
                        .WithMany("Goals")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_Goals_Area");

                    b.HasOne("IesSchool.Context.Models.Iep", "Iep")
                        .WithMany("Goals")
                        .HasForeignKey("Iepid")
                        .HasConstraintName("FK_Goals_IEP");

                    b.HasOne("IesSchool.Context.Models.Skill", "Skill")
                        .WithMany("Goals")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK_Goals_Skill");

                    b.HasOne("IesSchool.Context.Models.Strand", "Strand")
                        .WithMany("Goals")
                        .HasForeignKey("StrandId")
                        .HasConstraintName("FK_Goals_Strand");

                    b.Navigation("Area");

                    b.Navigation("Iep");

                    b.Navigation("Skill");

                    b.Navigation("Strand");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Iep", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AcadmicYear", "AcadmicYear")
                        .WithMany("Ieps")
                        .HasForeignKey("AcadmicYearId")
                        .IsRequired()
                        .HasConstraintName("FK_IEP_AcadmicYears");

                    b.HasOne("IesSchool.Context.Models.User", "HeadOfDepartmentNavigation")
                        .WithMany("IepHeadOfDepartmentNavigations")
                        .HasForeignKey("HeadOfDepartment")
                        .HasConstraintName("FK_IEP_HeadOfDepartmentUser");

                    b.HasOne("IesSchool.Context.Models.User", "HeadOfEducationNavigation")
                        .WithMany("IepHeadOfEducationNavigations")
                        .HasForeignKey("HeadOfEducation")
                        .IsRequired()
                        .HasConstraintName("FK_IEP_HeadOfEducationUser");

                    b.HasOne("IesSchool.Context.Models.Student", "Student")
                        .WithMany("Ieps")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_IEP_Students");

                    b.HasOne("IesSchool.Context.Models.User", "Teacher")
                        .WithMany("IepTeachers")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_IEP_TeacherIdUser");

                    b.HasOne("IesSchool.Context.Models.Term", "Term")
                        .WithMany("Ieps")
                        .HasForeignKey("TermId")
                        .IsRequired()
                        .HasConstraintName("FK_IEP_Term");

                    b.Navigation("AcadmicYear");

                    b.Navigation("HeadOfDepartmentNavigation");

                    b.Navigation("HeadOfEducationNavigation");

                    b.Navigation("Student");

                    b.Navigation("Teacher");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("IesSchool.Context.Models.IepAssistant", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Assistant", "Assistant")
                        .WithMany("IepAssistants")
                        .HasForeignKey("AssistantId")
                        .HasConstraintName("FK_IepAssistant_Assistant");

                    b.HasOne("IesSchool.Context.Models.Iep", "Iep")
                        .WithMany("IepAssistants")
                        .HasForeignKey("Iepid")
                        .HasConstraintName("FK_IepAssistant_IEP");

                    b.Navigation("Assistant");

                    b.Navigation("Iep");
                });

            modelBuilder.Entity("IesSchool.Context.Models.IepExtraCurricular", b =>
                {
                    b.HasOne("IesSchool.Context.Models.ExtraCurricular", "ExtraCurricular")
                        .WithMany("IepExtraCurriculars")
                        .HasForeignKey("ExtraCurricularId")
                        .HasConstraintName("FK_IEP_ExtraCurricular_ExtraCurricular");

                    b.HasOne("IesSchool.Context.Models.Iep", "Iep")
                        .WithMany("IepExtraCurriculars")
                        .HasForeignKey("Iepid")
                        .HasConstraintName("FK_IEP_ExtraCurricular_IEP");

                    b.Navigation("ExtraCurricular");

                    b.Navigation("Iep");
                });

            modelBuilder.Entity("IesSchool.Context.Models.IepParamedicalService", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Iep", "Iep")
                        .WithMany("IepParamedicalServices")
                        .HasForeignKey("Iepid")
                        .HasConstraintName("FK_IEP_ParamedicalService_IEP");

                    b.HasOne("IesSchool.Context.Models.ParamedicalService", "ParamedicalService")
                        .WithMany("IepParamedicalServices")
                        .HasForeignKey("ParamedicalServiceId")
                        .HasConstraintName("FK_IEP_ParamedicalService_ParamedicalService");

                    b.Navigation("Iep");

                    b.Navigation("ParamedicalService");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Objective", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Goal", "Goal")
                        .WithMany("Objectives")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Objective_Goals");

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ObjectiveEvaluationProcess", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Objective", "Objective")
                        .WithMany("ObjectiveEvaluationProcesses")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Objective_EvaluationProcess_Objective");

                    b.HasOne("IesSchool.Context.Models.SkillEvaluation", "SkillEvaluation")
                        .WithMany("ObjectiveEvaluationProcesses")
                        .HasForeignKey("SkillEvaluationId")
                        .HasConstraintName("FK_Objective_EvaluationProcess_SkillEvaluation");

                    b.Navigation("Objective");

                    b.Navigation("SkillEvaluation");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ObjectiveSkill", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Objective", "Objective")
                        .WithMany("ObjectiveSkills")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Objective_Skill_Objective");

                    b.HasOne("IesSchool.Context.Models.Skill", "Skill")
                        .WithMany("ObjectiveSkills")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK_Objective_Skill_Skill");

                    b.Navigation("Objective");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Phone", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Student", "Student")
                        .WithMany("Phones")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Phone_Students");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Setting", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Term", "CurrentTerm")
                        .WithMany("Settings")
                        .HasForeignKey("CurrentTermId")
                        .HasConstraintName("FK_Setting_Term");

                    b.HasOne("IesSchool.Context.Models.AcadmicYear", "CurrentYear")
                        .WithMany("Settings")
                        .HasForeignKey("CurrentYearId")
                        .HasConstraintName("FK_Setting_AcadmicYears");

                    b.Navigation("CurrentTerm");

                    b.Navigation("CurrentYear");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Skill", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Strand", "Strand")
                        .WithMany("Skills")
                        .HasForeignKey("StrandId")
                        .HasConstraintName("FK_Skill_Strand");

                    b.Navigation("Strand");
                });

            modelBuilder.Entity("IesSchool.Context.Models.SkillAlowedDepartment", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Department", "Department")
                        .WithMany("SkillAlowedDepartments")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Skill_AlowedDepartment_Department");

                    b.HasOne("IesSchool.Context.Models.Skill", "Skill")
                        .WithMany("SkillAlowedDepartments")
                        .HasForeignKey("SkillId")
                        .HasConstraintName("FK_Skill_AlowedDepartment_Skill");

                    b.Navigation("Department");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("IesSchool.Context.Models.State", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_State_Country");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Strand", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Area", "Area")
                        .WithMany("Strands")
                        .HasForeignKey("AreaId")
                        .HasConstraintName("FK_Strand_Area");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Student", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Country", "BirthCountry")
                        .WithMany("StudentBirthCountries")
                        .HasForeignKey("BirthCountryId")
                        .HasConstraintName("FK_Students_BirthCountry");

                    b.HasOne("IesSchool.Context.Models.City", "City")
                        .WithMany("Students")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Students_City");

                    b.HasOne("IesSchool.Context.Models.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Students_Department");

                    b.HasOne("IesSchool.Context.Models.Country", "FatherNationality")
                        .WithMany("StudentFatherNationalities")
                        .HasForeignKey("FatherNationalityId")
                        .HasConstraintName("FK_Students_FatherNationality");

                    b.HasOne("IesSchool.Context.Models.Country", "MotherNationality")
                        .WithMany("StudentMotherNationalities")
                        .HasForeignKey("MotherNationalityId")
                        .HasConstraintName("FK_Students_MotherNationality");

                    b.HasOne("IesSchool.Context.Models.Country", "Nationality")
                        .WithMany("StudentNationalities")
                        .HasForeignKey("NationalityId")
                        .HasConstraintName("FK_Students_Nationality");

                    b.HasOne("IesSchool.Context.Models.State", "State")
                        .WithMany("Students")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_Students_State");

                    b.HasOne("IesSchool.Context.Models.User", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Students_Teacher");

                    b.Navigation("BirthCountry");

                    b.Navigation("City");

                    b.Navigation("Department");

                    b.Navigation("FatherNationality");

                    b.Navigation("MotherNationality");

                    b.Navigation("Nationality");

                    b.Navigation("State");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentAttachment", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AttachmentType", "AttachmentType")
                        .WithMany("StudentAttachments")
                        .HasForeignKey("AttachmentTypeId")
                        .HasConstraintName("FK_StudentAttachment_AttachmentType");

                    b.HasOne("IesSchool.Context.Models.Student", "Student")
                        .WithMany("StudentAttachments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_StudentAttachment_Students");

                    b.Navigation("AttachmentType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentAttachmentBinary", b =>
                {
                    b.HasOne("IesSchool.Context.Models.StudentAttachment", "IdNavigation")
                        .WithOne("StudentAttachmentBinary")
                        .HasForeignKey("IesSchool.Context.Models.StudentAttachmentBinary", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_StudentAttachmentBinary_StudentAttachment");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentHistoricalSkill", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Skill", "HistoricalSkilldNavigation")
                        .WithMany("StudentHistoricalSkills")
                        .HasForeignKey("HistoricalSkilld")
                        .HasConstraintName("FK_StudentHistoricalSkills_Skill");

                    b.HasOne("IesSchool.Context.Models.Student", "Student")
                        .WithMany("StudentHistoricalSkills")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_StudentHistoricalSkills_Students");

                    b.Navigation("HistoricalSkilldNavigation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentTherapist", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Student", "Student")
                        .WithMany("StudentTherapists")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_Therapist_Students");

                    b.HasOne("IesSchool.Context.Models.User", "Therapist")
                        .WithMany("StudentTherapists")
                        .HasForeignKey("TherapistId")
                        .HasConstraintName("FK_Student_Therapist_User");

                    b.Navigation("Student");

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Term", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AcadmicYear", "AcadmicYear")
                        .WithMany("Terms")
                        .HasForeignKey("AcadmicYearId")
                        .HasConstraintName("FK_Term_AcadmicYears");

                    b.Navigation("AcadmicYear");
                });

            modelBuilder.Entity("IesSchool.Context.Models.TherapistParamedicalService", b =>
                {
                    b.HasOne("IesSchool.Context.Models.ParamedicalService", "ParamedicalService")
                        .WithMany("TherapistParamedicalServices")
                        .HasForeignKey("ParamedicalServiceId")
                        .HasConstraintName("FK_TherapistParamedicalService_ParamedicalService");

                    b.HasOne("IesSchool.Context.Models.User", "User")
                        .WithMany("TherapistParamedicalServices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_TherapistParamedicalService_User");

                    b.Navigation("ParamedicalService");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.User", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_User_Department");

                    b.HasOne("IesSchool.Context.Models.Country", "Nationality")
                        .WithMany("Users")
                        .HasForeignKey("NationalityId")
                        .HasConstraintName("FK_User_Country");

                    b.Navigation("Department");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAssistant", b =>
                {
                    b.HasOne("IesSchool.Context.Models.Assistant", "Assistant")
                        .WithMany("UserAssistants")
                        .HasForeignKey("AssistantId")
                        .HasConstraintName("FK_User_Assistant_Assistant");

                    b.HasOne("IesSchool.Context.Models.User", "User")
                        .WithMany("UserAssistants")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_Assistant_User");

                    b.Navigation("Assistant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAttachment", b =>
                {
                    b.HasOne("IesSchool.Context.Models.AttachmentType", "AttachmentType")
                        .WithMany("UserAttachments")
                        .HasForeignKey("AttachmentTypeId")
                        .HasConstraintName("FK_UserAttachment_AttachmentType");

                    b.HasOne("IesSchool.Context.Models.User", "User")
                        .WithMany("UserAttachments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserAttachment_User");

                    b.Navigation("AttachmentType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAttachmentBinary", b =>
                {
                    b.HasOne("IesSchool.Context.Models.UserAttachment", "IdNavigation")
                        .WithOne("UserAttachmentBinary")
                        .HasForeignKey("IesSchool.Context.Models.UserAttachmentBinary", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_UserAttachmentBinary_UserAttachment");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AcadmicYear", b =>
                {
                    b.Navigation("Ieps");

                    b.Navigation("Settings");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ApplicationGroup", b =>
                {
                    b.Navigation("ApplicationGroupRoles");

                    b.Navigation("ApplicationUserGroups");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Area", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Strands");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetRole", b =>
                {
                    b.Navigation("ApplicationGroupRoles");

                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AspNetUser", b =>
                {
                    b.Navigation("ApplicationUserGroups");

                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Assistant", b =>
                {
                    b.Navigation("IepAssistants");

                    b.Navigation("UserAssistants");
                });

            modelBuilder.Entity("IesSchool.Context.Models.AttachmentType", b =>
                {
                    b.Navigation("StudentAttachments");

                    b.Navigation("UserAttachments");
                });

            modelBuilder.Entity("IesSchool.Context.Models.City", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Country", b =>
                {
                    b.Navigation("Assistants");

                    b.Navigation("States");

                    b.Navigation("StudentBirthCountries");

                    b.Navigation("StudentFatherNationalities");

                    b.Navigation("StudentMotherNationalities");

                    b.Navigation("StudentNationalities");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Department", b =>
                {
                    b.Navigation("Assistants");

                    b.Navigation("Events");

                    b.Navigation("SkillAlowedDepartments");

                    b.Navigation("Students");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Event", b =>
                {
                    b.Navigation("EventAttachements");

                    b.Navigation("EventStudents");

                    b.Navigation("EventTeachers");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventAttachement", b =>
                {
                    b.Navigation("EventAttachmentBinary")
                        .IsRequired();
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudent", b =>
                {
                    b.Navigation("EventStudentFiles");
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventStudentFile", b =>
                {
                    b.Navigation("EventStudentFileBinary")
                        .IsRequired();
                });

            modelBuilder.Entity("IesSchool.Context.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ExtraCurricular", b =>
                {
                    b.Navigation("IepExtraCurriculars");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Goal", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Iep", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("IepAssistants");

                    b.Navigation("IepExtraCurriculars");

                    b.Navigation("IepParamedicalServices");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Objective", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("ObjectiveEvaluationProcesses");

                    b.Navigation("ObjectiveSkills");
                });

            modelBuilder.Entity("IesSchool.Context.Models.ParamedicalService", b =>
                {
                    b.Navigation("IepParamedicalServices");

                    b.Navigation("TherapistParamedicalServices");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Skill", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("ObjectiveSkills");

                    b.Navigation("SkillAlowedDepartments");

                    b.Navigation("StudentHistoricalSkills");
                });

            modelBuilder.Entity("IesSchool.Context.Models.SkillEvaluation", b =>
                {
                    b.Navigation("ObjectiveEvaluationProcesses");
                });

            modelBuilder.Entity("IesSchool.Context.Models.State", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Strand", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("IesSchool.Context.Models.Student", b =>
                {
                    b.Navigation("EventStudents");

                    b.Navigation("Ieps");

                    b.Navigation("Phones");

                    b.Navigation("StudentAttachments");

                    b.Navigation("StudentHistoricalSkills");

                    b.Navigation("StudentTherapists");
                });

            modelBuilder.Entity("IesSchool.Context.Models.StudentAttachment", b =>
                {
                    b.Navigation("StudentAttachmentBinary")
                        .IsRequired();
                });

            modelBuilder.Entity("IesSchool.Context.Models.Term", b =>
                {
                    b.Navigation("Ieps");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("IesSchool.Context.Models.User", b =>
                {
                    b.Navigation("AspNetUser")
                        .IsRequired();

                    b.Navigation("EventTeachers");

                    b.Navigation("IepHeadOfDepartmentNavigations");

                    b.Navigation("IepHeadOfEducationNavigations");

                    b.Navigation("IepTeachers");

                    b.Navigation("StudentTherapists");

                    b.Navigation("Students");

                    b.Navigation("TherapistParamedicalServices");

                    b.Navigation("UserAssistants");

                    b.Navigation("UserAttachments");
                });

            modelBuilder.Entity("IesSchool.Context.Models.UserAttachment", b =>
                {
                    b.Navigation("UserAttachmentBinary")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
